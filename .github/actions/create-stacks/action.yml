name: "Create AWS Stacks"
description: "Provision AWS Resources, Cert, S3 Buckets, CloudFront Distributions, etc."

runs:
  using: "composite"
  steps:
    - name: Install Dependencies
      run: |
        cd aws-cdk
        npm install -g aws-cdk@1.62.0
        pip3 install -r requirements.txt
        sudo apt-get install jq
      shell: bash
    - name: Create Stacks
      run: |
        cd aws-cdk
        cdk ls -c domain="${{ env.DOMAIN }}" -c certificate_arn="Dummy Value"
      shell: bash
    - name: Deploy Certificate Stack
      run: |
        cd aws-cdk
        cdk deploy CertificateStack-acg-covid-challenge -c domain="${{ env.DOMAIN }}" -c certificate_arn="Dummy Name" --require-approval "never" --outputs-file cdk-deploy-output.json
        echo "::set-env name=CERT_ARN::$(jq .CertificateStack-acg-covid-challenge.certificatearn cdk-deploy-output.json)"
      shell: bash
    - name: Deploy Static Site Stack
      run: |
        cd aws-cdk
        cdk deploy "StaticSiteStack*" -c domain="${{ env.DOMAIN }}" -c certificate_arn="${{ env.CERT_ARN }}" --require-approval "never" --outputs-file cdk-deploy-output.json
      shell: bash
    - name: Set Environment Variables
      run: |
        cd aws-cdk
        export FILE=cdk-deploy-output.json
        export STACK=$(jq keys_unsorted[] $FILE) 

        function remove_quotes {
            echo $1 | tr -d '"'
        }

        echo "::set-env name=DIST_ID::$(remove_quotes $(jq .$STACK.distid $FILE))"
        echo "::set-env name=BUCKET::$(remove_quotes $(jq .$STACK.sitebucketname $FILE))"
      shell: bash
